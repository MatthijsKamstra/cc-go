{
"version":3,
"file":"cc_example.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/GIT/cc-go/src/Main.hx","/Users/matthijs/Documents/GIT/cc-go/src/model/constants/App.hx"],
"sourcesContent":["package;\n\nimport cc.lets.extern.GoSVG;\nimport js.html.svg.Rect;\nimport js.html.svg.SVGElement;\nimport js.Syntax;\nimport js.html.svg.Element;\nimport js.Browser.*;\nimport model.constants.App;\n\n/**\n * @author Matthijs Kamstra aka [mck]\n * MIT\n *\n */\nclass Main {\n\tpublic function new() {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t\t\tconsole.info('${App.NAME} Dom ready :: build: ${App.getBuildDate()} ');\n\t\t\t// init0();\n\t\t\t// init1();\n\t\t\t// initRotationTest();\n\t\t\tinitMove();\n\t\t});\n\t}\n\n\tfunction initMove() {\n\t\tvar randomY = (Math.random() * 200) - 10;\n\t\tvar _obj = GoSVG.svg(cast document.getElementById('rect-2'));\n\t\tGoSVG.to(_obj.el, 5).x(randomY) //\n\t\t\t// .delay(1)\n\t\t\t.onComplete(function() {\n\t\t\t\ttrace('onComplete Rect');\n\t\t\t\tinitMove();\n\t\t\t});\n\t}\n\n\tfunction initRotationTest() {\n\t\tconsole.info('onComplete');\n\t\t// var svgObject = GoSVG.svg(cast document.getElementById('simple-example'));\n\t\tvar randomOpacity = Math.random();\n\t\tvar randomRotation = Math.random() * 360;\n\n\t\t// var _obj = GoSVG.svg(cast document.getElementById('rect-2'));\n\t\t// trace(_obj);\n\t\t// GoSVG.to(_obj.el, 5)\n\t\t// \t.rotation(100, _obj.centerX, _obj.centerY)\n\t\t// \t.delay(1)\n\t\t// \t.onComplete(function() {\n\t\t// \t\ttrace('onComplete');\n\t\t// \t});\n\n\t\t// .onComplete(initRotationTest)\n\t\t// .onUpdate(function() {\n\t\t// \ttrace('onUpdate');// .pos(svgObject.width * Math.random(), svgObject.height * Math.random())\n\t\t// .opacity(randomOpacity)\n\t\t// .scale(Math.random() * 10)// .yoyo()\n\t\t// .onUpdate(init2OnUpdateHandler)\n\t\t// });\n\n\t\t// var _obj = GoSVG.svg(cast document.getElementById('ellipse-2'));\n\t\t// GoSVG.to(_obj.el, 5)\n\t\t// \t.rotation(100, _obj.centerX, _obj.centerY)\n\t\t// \t.delay(2)\n\t\t// \t.onComplete(function() {\n\t\t// \t\ttrace('onComplete');\n\t\t// \t});\n\n\t\t// var _obj = GoSVG.svg(cast document.getElementById('circle-2'));\n\t\t// GoSVG.to(_obj.el, 5)\n\t\t// \t.rotation(100, _obj.centerX, _obj.centerY)\n\t\t// \t.delay(3)\n\t\t// \t.onComplete(function() {\n\t\t// \t\ttrace('onComplete');\n\t\t// \t});\n\n\t\tvar _obj = GoSVG.svg(cast document.getElementById('line-2'));\n\t\tGoSVG.to(_obj.el, 5)\n\t\t\t.rotation(100, _obj.centerX, _obj.centerY)\n\t\t\t.delay(4)\n\t\t\t.onComplete(function() {\n\t\t\t\ttrace('onComplete');\n\t\t\t});\n\n\t\tvar _obj = GoSVG.svg(cast document.getElementById('text-3'));\n\t\t// trace(_obj);\n\t\tGoSVG.to(_obj.el, 5).rotation(180, _obj.centerX, _obj.centerY).onComplete(function() {\n\t\t\ttrace('onComplete');\n\t\t});\n\n\t\tvar _obj = GoSVG.svg(cast document.getElementById('polygon-2'));\n\t\tGoSVG.to(_obj.el, 5).rotation(180, _obj.centerX, _obj.centerY).onComplete(function() {\n\t\t\ttrace('onComplete');\n\t\t});\n\n\t\tvar _obj = GoSVG.svg(cast document.getElementById('polyline-2'));\n\t\tGoSVG.to(_obj.el, 5).rotation(180, _obj.centerX, _obj.centerY).onComplete(function() {\n\t\t\ttrace('onComplete');\n\t\t});\n\n\t\tvar _obj = GoSVG.svg(cast document.getElementById('path-2'));\n\t\tGoSVG.to(_obj.el, 5).rotation(180, _obj.centerX, _obj.centerY).onComplete(function() {\n\t\t\ttrace('onComplete');\n\t\t});\n\t}\n\n\tfunction init2OnUpdateHandler(?time) {\n\t\tvar text = document.getElementById('text-2');\n\t\ttext.innerHTML = 'time: ${time}';\n\t}\n\n\tfunction init1() {\n\t\tvar svgs = document.getElementsByTagName('svg');\n\t\ttrace(svgs.length);\n\n\t\tvar svg:SVGElement = cast document.getElementsByTagName('svg')[0];\n\t\tvar children = (svg.children);\n\t\tfor (i in children) {\n\t\t\tvar child = i;\n\t\t\t// console.log(i.tagName);\n\t\t}\n\n\t\tvar svgViewBox = svg.getAttribute('viewBox');\n\t\ttrace('${svgViewBox}');\n\n\t\tvar svgRect:Rect = (svg.viewBox.baseVal);\n\t\ttrace(svgRect);\n\n\t\t// var svgViewBoxArray = svgViewBox.split(' ');\n\t\t// var svgX = svgViewBoxArray[0];\n\t\t// var svgY = svgViewBoxArray[1];\n\t\t// var svgWidth:Float = Std.parseFloat(svgViewBoxArray[2]);\n\t\t// var svgHeight:Float = Std.parseFloat(svgViewBoxArray[3]);\n\n\t\t// untyped again <line>\n\t\tSyntax.code('GoSVG.to({0}, {1}).x({2}).y({3})', document.getElementById('line-1'), 5, 500, 100);\n\n\t\t// get <polyline>\n\t\tvar _svgPolyLine:Element = cast document.getElementById('polyline-1');\n\t\t// trace(_svgPolyLine);\n\t\t_svgPolyLine.setAttribute('transform', 'translate(333)');\n\n\t\t// use externs <polygon>\n\t\t// cc.lets.extern.GoSVG.to(cast document.getElementById('polygon-1'), 2).x(200).y(300);\n\t\tcc.lets.extern.GoSVG.to(cast document.getElementById('polygon-1'), 5).pos(300, 300);\n\n\t\tcc.lets.extern.GoSVG.to(cast document.getElementById('group-plus'), 5).pos(Math.random() * svgRect.width, Math.random() * svgRect.height);\n\t\t// cc.lets.extern.GoSVG.to(cast document.getElementById('group-plus'), 5).pos(400, 10);\n\t}\n\n\tfunction init0() {\n\t\t// search for element in svg\n\t\tvar svgCircle:Element = cast document.getElementById('circle-1');\n\t\t// console.log('${svgCircle}');\n\t\t// set dat by hand\n\t\tsvgCircle.setAttributeNS(null, 'cx', '111');\n\t\tsvgCircle.setAttribute('cy', '111');\n\n\t\t// use untyped code <circle>\n\t\tSyntax.code('GoSVG.to({0}, {1}).x({2}).y({3})', svgCircle, 5, 500, 100);\n\n\t\t// get rect <rect>\n\t\tvar svgRect:Element = cast document.getElementById('rect-1');\n\t\t// console.log('${svgRect}');\n\t\t// Syntax.code('GoSVG.test({0}, {1})', svgCircle, 2.4);\n\t\tSyntax.code('GoSVG.to({0}, {1}).x({2}).y({3})', svgRect, 10, 500, 555);\n\n\t\t// var _svgRect:js.html.svg.RectElement = cast document.getElementById('rect-1');\n\t\t// _svgRect.setAttributeNS(null, 'x', '100');\n\t\t// _svgRect.setAttribute('y', '100');\n\n\t\t// console.log('${_svgRect.x}');\n\t\t// trace(Reflect.field(_svgRect, 'y'));\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new Main();\n\t}\n}\n","package model.constants;\n\nimport haxe.macro.Context;\n\nclass App {\n\tpublic static var NAME:String = \"[let.GoSVG]\";\n\n\tinline public static macro function getBuildDate() {\n\t\t#if !display\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#else\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#end\n\t}\n}\n"],
"names":[],
"mappings":";;WAgBC,WAAsB;AAAA,CAAtB;AAAsB,CACrB,iCAA0B,mBAAoB,gBAAgB;AAAA,EAC7D,oBAAc,KAAE,2BAAS,0BCRX,wBDQqD;AADN,EAK7D;AAL6D;AADzC;YA+JtB,WACC;AAAA,WAAU;AAAV;;WAtJD,WAAoB;AAAA,EAApB;AAAoB,EACnB,cAAc,AAAC,gBAAgB,MAAO;AADnB,EAEnB,WAAW,UAAU,AAAK,+BAAyB;AAFhC,EAGnB,SAAS,QAAS,KAAK,oBAEV,WAAW;AAAA,GACtB,8BAAO;AADe,GAEtB;AAFsB;AALL;;;2BCrBY;;;;"
}